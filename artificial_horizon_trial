//import { useState, useEffect } from "react";
import circle from '@turf/circle';
import { Stage, Layer, Shape, Line, Circle, Group, Rect } from 'react-konva';

export const Artificial_horizon = (): JSX.Element => {
return(

    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>
        <div>
            <Stage width={window.innerWidth} height={window.innerHeight}>
                <Layer>
                    <Shell/>
                    <InnerShell/>
                    <HorizonSide/>
                    <CrossHair/>
                </Layer>
            </Stage>
        </div>
    </div>
 //   <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>
   //   hello<div/>
)

}

const Shell = () => {
    return (
      <Group
        x={window.innerWidth / 2}
        y={window.innerHeight / 2}
        clipFunc={(ctx) => {
          // Create a clipping path for the circle
          ctx.beginPath();
          ctx.arc(0, 0, 300, 0, Math.PI * 2, false);
          ctx.clip();
        }}
      >
        <Circle
          x={0}
          y={0}
          radius={300}
          fill="gray"
        />
        <Rect 
          x={-50} // Adjust these values to position the square inside the circle
          y={-100}
          width={900} // Size of the square
          height={900}
          fill="blue"
        />
      </Group>
    );
  }






const InnerShell = () => {
    return (
    <Circle
    x={window.innerWidth / 2}
    y={window.innerHeight / 2}
    radius={230}
    fill= "green"
    />
    );
}


const HorizonSide = () => {
    return (
      <Line
      x={window.innerWidth / 2}
      y={window.innerHeight / 2}
        points={[-300, 10, 300, 10]} // Define start and end points
        stroke="red"
        strokeWidth={2}
      />
    );
  };



const CrossHair = () => {
    return (


      <Shape
      x={window.innerWidth / 2 - 100}
      y={window.innerHeight / 2 + 40}
      width={100}
      height={100}
      fill="black"
      stroke="grey"
      strokeWidth={2}
      sceneFunc={function (context, shape) {
              const width = shape.width();
              const height = shape.height();
              context.beginPath();
             
              context.lineTo(width + 5, height - 0);
              context.lineTo(width +5 , height - 100); // New vertex
              context.lineTo(width + 50, height - 100);
              context.lineTo(width + 50, height - 130);
              context.lineTo(width + 130, height - 130)
              context.lineTo(width + 130, height - 140)
              context.lineTo(width +40, height - 140)
              context.lineTo(width +40, height - 110)
              context.lineTo(width +5, height - 110)
              context.lineTo(width +5, height - 140)
              context.lineTo(width -5, height - 140)
              context.lineTo(width -5, height - 110)
              context.lineTo(width -40, height - 110)
              context.lineTo(width -40, height - 140)
              context.lineTo(width -130, height - 140)
              context.lineTo(width -130, height - 130)
              context.lineTo(width -50, height - 130)
              context.lineTo(width -50, height - 100)
              context.lineTo(width -5, height - 100)
              context.lineTo(width -5, height - 0)
              context.lineTo(width -100, height + 80)
              context.lineTo(width -0, height + 80)
              context.lineTo(width +100, height + 80)
  


              context.closePath();

              // (!) Konva specific method, it is very important
              context.fillStrokeShape(shape);
            }}
      />
        
    );
  };
